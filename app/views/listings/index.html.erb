<div class="container-fluid">
  <div class="row">
    <div class="col-sm-4">
        <div class="row">
          <div class="col-xs-12">
            <h1 class="text-center info-pane-title">public<span class="ad-txt">ad</span></h1>
            <div class="info-pane-description">
              <p>Click on one of the map's markers to get started and see the public<span class="ad-txt">ad</span> information.</p>
            </div>
          </div>
        </div>
      <hr>
      <div class="row">
        <div class="col-xs-12">
          <%=form_tag("/listings", method: "get", search: true, class: "nifty_form c-t", id: "search_form") do%>
            <div class="row">
              <div class="col-xs-12">
                <%= label_tag(:category, "Search by publicAd space type: ", class: 'home-search-label') %>
                <%=select_tag 'category', options_for_select([ 'All', 'Billboard', 'Bench Ad', 'Bus Stop Ad'  ], @search_category ) %>
              </div>
              <div class="col-xs-12">
                <%= label_tag(:address, "Zip Code of Address:", class: 'd-b') %>
                <%= text_field_tag(:address, @search_address || 94101, :required => true) %>
              </div>
              <%= hidden_field_tag('distance', 'radius')%> 
            </div>
            <div class="row">
              <div class="col-xs-12">
                <p class="no-marg no-pad">Proxity </p>
                <div id="nonlinear" class="w-80-p c-w-m"></div>
                <span class="example-val" id="distance-value"></span>
              </div> <!-- .col-xs-12 -->
            </div> <!-- .row -->
            <div class="row">
              <div class="col-xs-12">
                <%= submit_tag("Find", class: 'btn btn-warning', id: 'distance_slider') %>
              </div> <!-- .col-xs-12 -->
            </div> <!-- .row  -->
          <%end%>
        </div> <!-- .col-xs-12 -->
      </div>  <!-- .row -->
      <hr>

      <div class="row">
      
<% if @gon_flag == true %>
          <div class="col-xs-12 c-w-m">
            <div class="av-hold">
              <img src="map_marker.png" class=" center-block" width="32" height="32">
              <p class="no-marg no-pad text-center">available</p>              
            </div>
            <div class="unav-hold">              
              <img src="map_marker_n.png" class=" center-block" width="32" height="32">
              <p class="no-marg no-pad text-center">unavailable</p>
            </div>
          </div>
<%end%>
        <div class="col-xs-12">
          <hr>
          <div class="side-bar-container" id="listingsSideBarContainer">
            <div id="marker_list" class="w-80-p c-w-m">
            <div class="accordion-group" id="list-details">

              
            </div>
            </div>

          </div> <!-- .side-bar-container -->
        </div> <!-- .col-xs-12 -->
      <hr>
      </div> <!-- .row -->
    </div> <!-- col-sm-4 -->
    <div class="col-sm-8">
      <div id='pubAdMap'></div>
    </div> <!-- col-sm-8 -->
  </div> <!-- .row -->
</div> <!-- .container -->







<% content_for :javascripts do %>
<script type="text/javascript" src="http://maps.google.com/maps/api/js"></script>
<script type="text/javascript">
var APP = {},
    map,
    center,
    mapContainer = $('#pubAdMap'),
    mapCanvas = document.createElement('div'),
    infoWindows = [],
    listingItemPanes = [];

    var mapOptions = {
      center: new google.maps.LatLng(37.7851138,-122.4204182),
      zoom: 13,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      zoomControl: true, 
      mapTypeControl: false,
      scrollwheel: false,
      zoomControlOptions: {position: google.maps.ControlPosition.LEFT_CENTER},
      styles: [{"featureType":"landscape","stylers":[{"saturation":-100},{"lightness":60}]},{"featureType":"road.local","stylers":[{"saturation":-100},{"lightness":40},{"visibility":"on"}]},{"featureType":"transit","stylers":[{"saturation":-100},{"visibility":"simplified"}]},{"featureType":"administrative.province","stylers":[{"visibility":"off"}]},{"featureType":"water","stylers":[{"visibility":"on"},{"lightness":30}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#ef8c25"},{"lightness":40}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"visibility":"off"}]},{"featureType":"poi.park","elementType":"geometry.fill","stylers":[{"color":"#b6c54c"},{"lightness":40},{"saturation":-40}]},{}]
    };
;APP.locationsMap = function () {
console.log(' here is the server-side returned data to build map: ' + gon.publicAdMapData);
  function initialize() {
    styleMapElement(mapCanvas);
    appendMapElement(mapCanvas, mapContainer);
    APP.map = new google.maps.Map(document.getElementById("map"),
        mapOptions);    
    if (gon.publicAdMapData.length > 0){
    setMarkers(APP.map, gon.publicAdMapData);
    } else {
      console.log('no gon data');
      var listingSideBar = document.getElementById('listingsSideBarContainer');
      var noMarkerMessage = document.createElement('p');
      noMarkerMessage.innerHTML = 'As Public Ad Space is currently in beta testing in the San Francisco area, try modifying your search within the SF area, with a higher proximity, to see publicAd listings.';
      noMarkerMessage.className += 'no-marg ' + 'no-pad '+ 'text-center'
      listingSideBar.appendChild(noMarkerMessage);
    }
    function styleMapElement(mapCanvas){
      mapCanvas.id = 'map';
      mapCanvas.style.height = '440px';
      mapCanvas.style.width = '100%';
      mapCanvas.style.margin='0 auto 0';
      mapCanvas.style.position= 'relative';
      return mapCanvas;
    }
    function appendMapElement(mapCanvas, mapContainer){
      var mapContainingElement;
      $(mapContainer).append(mapCanvas);
    }
    function calculateCenterOfMap() {
      APP.mapCenter = APP.map.getCenter();
    }
    function setMarkers(map,locations){
    var marker, i;
    console.log('locations' + locations)
      for (i = 0; i < locations.length; i++) {  
        var name = locations[i][1]['title'];
        var lat = locations[i][0]['latitude'];
        var longi = locations[i][0]['longitude'];
        var baseUrl = '/listings/'
        var latlngset = new google.maps.LatLng(lat, longi);
        var icon = {
                  scaledSize: new google.maps.Size(32, 32), 
                  origin: new google.maps.Point(0,0), 
                  anchor: new google.maps.Point(0, 0)
                };
        if (locations[i][1]['is_available'] === true) {
                icon['url']= "map_marker.png";
        }
        if (locations[i][1]['is_available'] === false) {
                  icon['url']= "map_marker_n.png" ;
        }
        marker = new google.maps.Marker({  
                  map: map, 
                  title: name,
                  position: latlngset,
                  icon: icon,
                  id: i + 1
                });

        var content = "<p class='marker_title'>"+marker.id +'. '+name+"</p><p class='marker_title '><a class='t-d-n l-c-p o-c-t' href='"+baseUrl+locations[i][1]['id']+"'>More Info</a></p>";
        var infowindow = new google.maps.InfoWindow();
            createMarkerButton(marker, locations[i]);
        google.maps.event.addListener(marker,'click', (function(marker,content,infowindow){ 
            return function() {
                /* close the previous info-window */
               closeInfoWindows();
               collapseListItemPane();
               
               infowindow.setContent(content);
               infowindow.open(map,marker);
               listItemPane = $('#marker-'+marker.id);
               $(listItemPane).collapse('show');

                /* keep the handle, in order to close it on next click event */
                listingItemPanes[0] = listItemPane;
                infoWindows[0]=infowindow;
            };
        })(marker,content,infowindow)); 
      }
    }
    function closeInfoWindows(){
       if(infoWindows.length > 0) {
          /* detach the info-window from the marker ... undocumented in the API docs */
          infoWindows[0].set("marker", null);
          /* and close it */
          infoWindows[0].close();
          /* blank the array */
          infoWindows.length = 0;
       }
    }
    function collapseListItemPane(){
      if (listingItemPanes.length > 0) {
        console.log('this worked');
        $(listingItemPanes[0]).collapse('hide');
        console.log('pre-wipe: ' + listingItemPanes.length);
        listingItemPanes.length = 0;
        console.log('post-wipe: ' + listingItemPanes.length);
      }

    }
    function createMarkerButton(marker, markerData) {
  //Creates a sidebar list
var baseUrlListing = '/listings/'
var markerTitle = marker.getTitle();
var markerId = marker.id;

var listingsListContainer = document.getElementById("marker_list"),
    listingLink = document.createElement("a"),
    listingInfoContainer = document.createElement('div'),
    listingInfo = document.createElement('p');


listingLink.className += "d-b t-d-n l-c-p t-b" ;
listingLink.innerHTML = markerId + '. ' +markerTitle;
listingLink.setAttribute('data-parent', '#marker_list');
listingLink.setAttribute('data-target', '#marker-'+ markerId);
listingLink.setAttribute('data-toggle', 'collapse');

listingInfoContainer.className += 'collapse p-l-15px';
listingInfoContainer.setAttribute('id', 'marker-'+ markerId);

listingInfo.className += 'no-marg f-w-400 t-d-g ' + 'no-pad';
listingInfo.innerHTML = 'Description: ' + markerData[1]['description'];
moreInfo = document.createElement("a"),
moreInfo.setAttribute('href', baseUrlListing+markerData[1]['id'])
moreInfo.className += 'f-w-400 l-c-p t-d-g t-d-n o-c-t'
moreInfo.innerHTML = 'More Info';


console.log('here is some' +moreInfo.length);
listingInfoContainer.appendChild(listingInfo);
listingInfoContainer.appendChild(moreInfo);
listingLink.setAttribute('id', 'list-link-' + markerId);
listingsListContainer.insertBefore(listingLink, listingsListContainer.lastChild);
// var selector = '#list-link-'+markerId
var trial = $('#list-link-'+markerId);
// console.log('here is selector' + selector);
console.log('lengtj of trial '+ trial.length);
$(trial).after(listingInfoContainer);

console.log('here is the marker id' + markerId);
console.log('here is test data ' + JSON.stringify(markerData));

      //Trigger a click event to marker when a list listingLink is clicked.
    google.maps.event.addDomListener(listingLink, "click", function(){
        google.maps.event.trigger(marker, "click");
      });
    }
      //calculates center of map when map is idle
    google.maps.event.addDomListener(APP.map, 'idle', function() {
      calculateCenterOfMap();
    });
      //sets map center when resize event happens
    google.maps.event.addDomListener(window, 'resize', function() {
      APP.map.setCenter(APP.mapCenter);
    });

  }

  //initializes map buiilding function
  google.maps.event.addDomListener(window, 'load', initialize);
}
</script>
<script>APP.locationsMap();</script>

<% end %>